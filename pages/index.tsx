import Head from "next/head";
import { Inter } from "@next/font/google";
import { Box, Button, Flex, Text, useColorModeValue } from "@chakra-ui/react";
import { HeaderBar } from "../components";
import { BsList } from "react-icons/bs";
import { GetServerSideProps, NextPage } from "next";
import { getAdvice } from "@/utils/fetchApi";
import { useQuery } from "@tanstack/react-query";
import { useState } from "react";
import { Advice } from "@/typing";

const inter = Inter({ subsets: ["latin"] });

interface Props {
  advice: Advice;
}

const Home: NextPage<Props> = ({ advice }) => {
  const [adviceText, setAdviceText] = useState(advice.slip.advice);
  const { isFetching, refetch } = useQuery<Advice>(["get-advise"], getAdvice, {
    onSuccess: (dataSuccess) => setAdviceText(dataSuccess.slip.advice),
    refetchOnMount: false,
    refetchOnWindowFocus: false,
  });

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Box
          className={inter.className}
          bg={useColorModeValue("gray.50", "gray.800")}
          minH="100vh"
        >
          <Box maxW="7xl" mx="auto" p={{ base: 2, md: 10 }}>
            <HeaderBar navigate="/post/list" NavigateIcon={BsList} />
            <Flex flexDir="column" alignItems="center" mt={14}>
              <Flex
                flexDir="column"
                alignItems="center"
                bg={useColorModeValue("gray.100", "gray.700")}
                borderWidth={1}
                borderColor={useColorModeValue("gray.300", "gray.600")}
                p={10}
                borderRadius="xl"
                maxW="xl"
              >
                <Text
                  textAlign="center"
                  fontSize="2xl"
                  fontWeight={500}
                  textTransform="uppercase"
                  letterSpacing="10px"
                >
                  Advice
                </Text>
                <Text textAlign="center">{adviceText}</Text>
                <Button
                  isLoading={isFetching}
                  onClick={() => refetch()}
                  colorScheme="pink"
                  mt={4}
                >
                  Seek Advice ðŸ¤²
                </Button>
              </Flex>
            </Flex>
          </Box>
        </Box>
      </main>
    </>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps<Props> = async () => {
  const advice = await getAdvice();

  return {
    props: {
      advice,
    },
  };
};
