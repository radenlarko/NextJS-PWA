import NextLink from "next/link";
import { HeaderBar } from "@/components";
import { Post } from "@/typing";
import { getPosts } from "@/utils/fetchApi";
import { Box, Text, useColorModeValue } from "@chakra-ui/react";
import { Inter } from "@next/font/google";
import { useQuery } from "@tanstack/react-query";
import { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import React from "react";
import { BsMenuApp } from "react-icons/bs";

const inter = Inter({ subsets: ["latin"] });

interface Props {
  dataPost: Post[];
}

const PostList: NextPage<Props> = ({ dataPost }) => {
  const { data } = useQuery<Post[]>(["get-posts"], getPosts, {
    initialData: dataPost,
    refetchOnMount: false,
    refetchOnWindowFocus: false,
  });
  return (
    <>
      <Head>
        <title>Post List</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Box
          className={inter.className}
          bg={useColorModeValue("gray.50", "gray.800")}
          minH="100vh"
        >
          <Box maxW="7xl" mx="auto" p={{ base: 2, md: 10 }}>
            <HeaderBar navigate="/" NavigateIcon={BsMenuApp} />
            <Box mt={4}>
              {data.map((item) => (
                <NextLink key={item.id} href={`/post/${item.id}`}>
                  <Box
                    mb={2}
                    p={6}
                    bg={useColorModeValue("gray.100", "gray.700")}
                    borderRadius="lg"
                  >
                    <Text fontWeight={500}>{item.title}</Text>
                    <Text fontSize="sm" fontWeight="light">
                      {item.body}
                    </Text>
                  </Box>
                </NextLink>
              ))}
            </Box>
          </Box>
        </Box>
      </main>
    </>
  );
};

export default PostList;

export const getServerSideProps: GetServerSideProps<Props> = async () => {
  const dataPost = await getPosts();

  return {
    props: {
      dataPost,
    },
  };
};
